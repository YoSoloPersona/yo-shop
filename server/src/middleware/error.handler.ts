import { Request, Response, NextFunction } from 'express';
import debug from 'debug';

// locals
import config from '../config';
import ErrorApi from '../errors/errorApi';

// protocols
const log = debug('middleware:error.handler');
const error = debug('middleware:error.handler:error');

/**
 * API Error Handling
 * @param err error
 * @param req request
 * @param res response
 * @param next next handler
 * @returns void
 */
export function errorHandler(
    err: any,
    req: Request,
    res: Response,
    next: NextFunction
): void {
    // log errors
    log(err);

    if (err instanceof ErrorApi) {
        res.status(err.status).json({ message: err.message });
        return;
    }

    // If not an error generated by us.
    res.status(500).json({
        message: `Unexpected error.`,
        detail: config.mode === 'development' ? err : {}
    });
}
